#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1300
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 25
#define LAYER_MAIN 0
#define LAYER_ACTIVE 1
#define LAYER_FUNC 2
#define LAYER_TESTING 3

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    tapping-term-ms = <250>;
};

/ {
	keymap {
		compatible = "zmk,keymap";
		layer_0 {
			bindings = <
				&bootloader
				&mt TILDE GRAVE                        &mt EXCLAMATION NUMBER_1 &mt AT_SIGN NUMBER_2 &mt HASH NUMBER_3 &mt DOLLAR NUMBER_4          &mt PERCENT NUMBER_5 &tog LAYER_ACTIVE              &tog LAYER_FUNC &mt CARET NUMBER_6 &mt AMPERSAND NUMBER_7 &mt ASTERISK NUMBER_8 &mt LEFT_PARENTHESIS NUMBER_9 &mt RIGHT_PARENTHESIS NUMBER_0 &mt PIPE BACKSLASH
				&mt UNDERSCORE MINUS                   &kp Q                    &kp W                &kp E             &kp R                        &kp T                &mt RIGHT_BRACE LEFT_BRACE     &kp HOME        &kp Y              &kp U                  &kp I                 &kp O                         &kp P                          &mt PLUS EQUAL
				&mt RIGHT_PARENTHESIS LEFT_PARENTHESIS &kp A                    &kp S                &kp D             &kp F                        &kp G                                                               &kp H              &kp J                  &kp K                 &kp L                         &mt COLON SEMICOLON            &mt DOUBLE_QUOTES SINGLE_QUOTE
				&kp LEFT_SHIFT                         &kp Z                    &kp X                &kp C             &kp V                        &kp B                &mt RIGHT_BRACKET LEFT_BRACKET &kp END         &kp N              &kp M                  &mt LESS_THAN COMMA   &mt GREATER_THAN PERIOD       &mt QUESTION SLASH             &kp RIGHT_SHIFT
				&kp LEFT_CONTROL                       &kp LEFT_GUI             &kp LEFT_ALT         &mo LAYER_ACTIVE  &lt LAYER_FUNC K_APPLICATION                                                                                        &kp LEFT_ARROW         &kp UP_ARROW          &kp DOWN_ARROW                &kp RIGHT_ARROW                &kp CAPSLOCK
				                                                                                                                                    &kp C_VOLUME_UP      &kp C_VOLUME_DOWN              &kp PAGE_DOWN   &kp PAGE_UP
				                                                                                                       &kp SPACE                    &kp TAB              &kp C_PLAY_PAUSE               &kp INSERT      &kp RETURN         &kp BACKSPACE
				                                                                                                                                                         &kp ESCAPE                     &kp DELETE
			>;
		};
		layer_1 {
			bindings = <
				&bootloader
				&kp GRAVE        &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5    &trans            &trans        &kp NUMBER_6   &kp NUMBER_7    &kp NUMBER_8   &kp NUMBER_9    &kp NUMBER_0    &kp PRINTSCREEN
				&kp MINUS        &kp Q        &kp W        &kp E        &kp R        &kp T           &kp RIGHT_BRACE   &kp HOME      &msc SCRL_LEFT &msc SCRL_RIGHT &mmv MOVE_UP   &mkp MCLK       &kp P           &kp EQUAL
				&kp BACKSLASH    &kp A        &kp S        &kp D        &kp F        &kp G                                           &msc SCRL_UP   &mmv MOVE_LEFT  &mmv MOVE_DOWN &mmv MOVE_RIGHT &kp SEMICOLON   &kp SINGLE_QUOTE
				&kp LEFT_SHIFT   &kp Z        &kp X        &kp C        &kp V        &kp B           &kp RIGHT_BRACKET &kp END       &msc SCRL_DOWN &kp M           &kp COMMA      &kp PERIOD      &kp SLASH       &kp RIGHT_SHIFT
				&kp LEFT_CONTROL &kp LEFT_GUI &kp LEFT_ALT &trans       &trans                                                                      &kp LEFT_ARROW  &kp UP_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW &kp RIGHT_CONTROL
				                                                                     &kp C_VOLUME_UP &kp C_VOLUME_DOWN &kp PAGE_DOWN &kp PAGE_UP
				                                                        &kp SPACE    &kp TAB         &kp C_PLAY_PAUSE  &kp INSERT    &mkp LCLK      &mkp RCLK
				                                                                                     &kp ESCAPE        &kp DELETE
			>;
		};
		layer_2 {
			bindings = <
				&bootloader
				&kp RETURN          &kp F1        &kp F2                 &kp F3        &kp F4                  &kp F5          &trans                         &trans        &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11
				&kp LC(LA(TAB))     &kp LC(LA(Q)) &kp LC(LG(LEFT_ARROW)) &kp LG(TAB)   &kp LC(LG(RIGHT_ARROW)) &kp LC(LA(T))   &mt RIGHT_BRACE LEFT_BRACE     &kp HOME      &kp KP_DIVIDE   &kp KP_NUMBER_7 &kp KP_NUMBER_8 &kp KP_NUMBER_9 &kp KP_PLUS     &kp F12
				&kp LC(LS(LA(TAB))) &kp LC(LA(A)) &kp LC(LA(S))          &kp LC(LA(D)) &kp LC(LA(F))           &kp LC(LA(G))                                                &kp KP_MULTIPLY &kp KP_NUMBER_4 &kp KP_NUMBER_5 &kp KP_NUMBER_6 &kp KP_MINUS    &kp KP_ENTER
				&kp LEFT_SHIFT      &kp LC(LA(Z)) &kp LC(PAGE_UP)        &kp LC(LA(C)) &kp LC(PAGE_DOWN)       &kp LC(LA(B))   &mt RIGHT_BRACKET LEFT_BRACKET &kp END       &kp KP_DOT      &kp KP_NUMBER_1 &kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_NUMBER_0 &kp KP_CLEAR
				&kp LEFT_CONTROL    &kp LEFT_GUI  &kp LEFT_ALT           &trans        &trans                                                                                               &kp LEFT_ARROW  &kp UP_ARROW    &kp DOWN_ARROW  &kp RIGHT_ARROW &kp KP_NUMLOCK
				                                                                                               &kp C_VOLUME_UP &kp C_VOLUME_DOWN              &kp PAGE_DOWN &kp PAGE_UP
				                                                                       &kp SPACE               &kp TAB         &kp C_PLAY_PAUSE               &kp INSERT    &kp RETURN      &kp BACKSPACE
				                                                                                                               &kp ESCAPE                     &kp DELETE
			>;
		};
		layer_3 {
			bindings = <
				&bootloader
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5                           &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6 &kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6
				&kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4                                                     &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_5 &kp NUMBER_6
				                                                                 &kp NUMBER_0 &kp NUMBER_1 &kp NUMBER_0 &kp NUMBER_1
				                                                    &kp NUMBER_3 &kp NUMBER_4 &kp NUMBER_2 &kp NUMBER_2 &kp NUMBER_3 &kp NUMBER_4
				                                                                              &kp NUMBER_5 &kp NUMBER_5
			>;
		};
	};
};
